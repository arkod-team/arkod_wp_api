openapi: "3.0.0"

info:
  title: ARKOD WordPress API
  version: "0.0.1"
  contact:
    email: dev@arkod.fr
  description: |-
    # ARKOD WordPress API

    ARKOD WordPress API is an HTTP REST API consumed by ARKOD WordPress desktop application, website and mobile apps to manage WordPress websites.

servers:
  - url: http://localhost:8080
    description: Development server
  - url: https://arkod-wp.localhost/api
    description: Local server

tags:
  - name: Engines
  - name: Websites

paths:
  /engines:
    get:
      operationId: EnginesList
      summary: List engines
      description: |-
        List all engines.
      tags:
        - Engines
      produces:
        - application/json
      responses:
        "200":
          description: Engines
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Engine"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /engines/{id}:
    get:
      operationId: EnginesDetails
      summary: Get engine
      description: |-
        Retrieve details about an engine.
      tags:
        - Engines
      parameters:
        - description: Engine ID
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: Engine
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Engine"
        "400":
          description: Invalid engine ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /engines/{id}/init:
    post:
      operationId: EnginesInit
      summary: Initialize engine
      description: |-
        Initialize a new engine.
      tags:
        - Engines
      parameters:
        - description: Engine ID
          in: path
          name: id
          required: true
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  description: Administrator username
                  type: string
                password:
                  description: Administrator password
                  type: string
              required:
                - username
                - password
              example:
                username: admin
                password: password
      produces:
        - application/json
      responses:
        "200":
          description: Initialized engine
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Engine"
        "400":
          description: Invalid engine ID or required body parameters missing
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          description: Engine already initialized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /engines/{id}/signin:
    post:
      operationId: EnginesSignin
      summary: Sign in to engine
      description: |-
        Sign in to an existing engine.
      tags:
        - Engines
      parameters:
        - description: Engine ID
          in: path
          name: id
          required: true
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  description: Administrator username
                  type: string
                password:
                  description: Administrator password
                  type: string
              required:
                - username
                - password
              example:
                username: admin
                password: password
      produces:
        - application/json
      responses:
        "200":
          description: Authenticated engine
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Engine"
        "400":
          description: Invalid engine ID or required body parameters missing
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          description: Engine not initialized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /engines/{id}/endpoints:
    get:
      operationId: EnginesEndpointsList
      summary: List engine's endpoints
      description: |-
        List all endpoints of an engine.
      tags:
        - Engines
      parameters:
        - description: Engine ID
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: Endpoints
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Endpoint"
        "400":
          description: Invalid engine ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          description: Engine not initialized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /websites:
    get:
      operationId: WebsitesList
      summary: List websites
      description: |-
        List all websites.
      tags:
        - Websites
      produces:
        - application/json
      responses:
        "200":
          description: Websites
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Website"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /websites/{id}:
    get:
      operationId: WebsitesDetails
      summary: Get website
      description: |-
        Retrieve details about a website.
      tags:
        - Websites
      parameters:
        - description: Website ID
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: Website
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Website"
        "400":
          description: Invalid website ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
    post:
      operationId: WebsitesAdd
      summary: Add website
      description: |-
        Create a new website.
      tags:
        - Websites
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                engineId:
                  description: Website initial environment's engine ID
                  type: int
                endpointId:
                  description: Website initial environment's endpoint ID
                  type: int
                name:
                  description: Website name
                  type: string
                title:
                  description: Website title
                  type: string
                adminUsername:
                  description: Website administrator username
                  type: string
                adminPassword:
                  description: Website administrator password
                  type: string
                adminEmail:
                  description: Website administrator email address
                  type: string
                postsUrlStructure:
                  description: Website posts URL structure
                  type: string
                dbRootPassword:
                  description: Website database root password
                  type: string
                dbUser:
                  description: Website database user
                  type: string
                dbPassword:
                  description: Website database password
                  type: string
                dbTablesPrefix:
                  description: Website database tables prefix
                  type: string
              required:
                - engineId
                - endpointId
                - name
              example:
                engineId: 1
                endpointId: 1
                name: my-website
                title: My website
                adminUsername: admin
                adminPassword: password
                adminEmail: admin@my-website.com
                postsUrlStructure: /blog/%postname
                dbRootPassword: password
                dbUser: admin
                dbPassword: password
                dbTablesPrefix: wp_
      produces:
        - application/json
      responses:
        "200":
          description: Created website engine
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Website"
        "400":
          description: Invalid engine ID or endpoint ID or required body parameters missing
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          description: Website name unavailable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "422":
          description: Engine not initialized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          $ref: "#/components/responses/InternalServerError"
    delete:
      operationId: WebsitesDelete
      summary: Delete website
      description: |-
        Delete a website.
      tags:
        - Websites
      parameters:
        - description: Website ID
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: Deleted resources
          content:
            application/json:
              schema:
                type: object
                properties:
                  website:
                    $ref: "#/components/schemas/Website"
                  environments:
                    description: Deleted environments
                    type: array
                    items:
                      $ref: "#/components/schemas/Environment"
        "400":
          description: Invalid website ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /websites/{id}/environments:
    get:
      operationId: WebsitesEnvironmensList
      summary: List a website's environments
      description: |-
        List all environments of a website.
      tags:
        - Websites
      parameters:
        - description: Website ID
          in: path
          name: id
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: Environments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Website"
        "400":
          description: Invalid website ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /websites/{id}/environments/{eId}/start:
    post:
      operationId: WebsitesEnvironmentsStart
      summary: Start a website
      description: |-
        Start a website in specific environment.
      tags:
        - Websites
      parameters:
        - description: Website ID
          in: path
          name: id
          required: true
          type: integer
        - description: Environment ID
          in: path
          name: eId
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: Started website
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Website"
        "400":
          description: Invalid website ID or environment ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          description: Engine not initialized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /websites/{id}/environments/{eId}/stop:
    post:
      operationId: WebsitesEnvironmentsStop
      summary: Stop a website
      description: |-
        Stop a website in specific environment.
      tags:
        - Websites
      parameters:
        - description: Website ID
          in: path
          name: id
          required: true
          type: integer
        - description: Environment ID
          in: path
          name: eId
          required: true
          type: integer
      produces:
        - application/json
      responses:
        "200":
          description: Stopped website
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Website"
        "400":
          description: Invalid website ID or environment ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          $ref: "#/components/responses/NotFound"
        "422":
          description: Engine not initialized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          $ref: "#/components/responses/InternalServerError"

components:
  schemas:
    Engine:
      type: object
      properties:
        id:
          description: Engine ID
          type: integer
        createdAt:
          description: Engine creation date ISO8601 formatted
          type: string
        isInitialized:
          description: Is the engine initialized ?
          type: boolean
        name:
          description: Engine name
          type: string
        host:
          description: Engine host
          type: string
        type:
          description: Engine type
          type: string
          enum:
            - portainer
        endpoints:
          description: Engine endpoints
          type: array
          items:
            $ref: "#/components/schemas/Endpoint"
        apiKey:
          description: Portainer API key generated by engine initialization
          type: string
      required:
        - id
        - createdAt
        - isInitialized
        - name
        - host
        - type
      example:
        id: 1
        createdAt: 2022-01-01T12:00:00.000000Z
        isInitialized: true
        name: local
        host: arkod-wp.localhost
        type: portainer
        endpoints:
          - id: 1
            name: local
            url: unix:///var/run/docker.sock
            type: docker
            status: up
        apiKey: secret-api-key-generated-by-initialization
    Endpoint:
      type: object
      properties:
        id:
          description: Endpoint ID
          type: integer
        name:
          description: Endpoint name
          type: string
        url:
          description: Endpoint Docker host URL
          type: string
        type:
          description: Endpoint type
          type: string
          enum:
            - docker
            - agent
            - azure
        status:
          description: Endpoint status
          type: string
          enum:
            - up
            - down
      required:
        - id
        - name
        - url
        - type
        - status
      example:
        id: 1
        name: local
        url: unix:///var/run/docker.sock
        type: docker
        status: up
    Website:
      type: object
      properties:
        id:
          description: Website ID
          type: integer
        createdAt:
          description: Website creation date ISO8601 formatted
          type: string
        name:
          description: Website name
          type: string
        title:
          description: Website title
          type: string
        adminUsername:
          description: Website administrator username
          type: string
        adminPassword:
          description: Website administrator password
          type: string
        adminEmail:
          description: Website administrator email address
          type: string
        postsUrlStructure:
          description: Website posts URL structure
          type: string
        dbRootPassword:
          description: Website database root password
          type: string
        dbUser:
          description: Website database user
          type: string
        dbPassword:
          description: Website database password
          type: string
        dbTablesPrefix:
          description: Website database tables prefix
          type: string
        environments:
          description: Website environments
          type: array
          items:
            $ref: "#/components/schemas/Environment"
      required:
        - id
        - createdAt
        - name
        - title
        - adminUsername
        - adminPassword
        - adminEmail
        - postsUrlStructure
        - dbRootPassword
        - dbUser
        - dbPassword
        - dbTablesPrefix
      example:
        id: 1
        createdAt: 2022-01-01T12:00:00.000000Z
        name: my-website
        title: My website
        adminUsername: admin
        adminPassword: password
        adminEmail: admin@my-website.com
        postsUrlStructure: /blog/%postname
        dbRootPassword: password
        dbUser: admin
        dbPassword: password
        dbTablesPrefix: wp_
        environments:
          - id: 1
            createdAt: 2022-01-01T12:00:00.000000Z
            websiteId: 1
            engineId: 1
            endpointId: 1
            stackId: 123
            websiteUrl: https://my-website.arkod-wp.localhost
            status: running
    Environment:
      type: object
      properties:
        id:
          description: Environment ID
          type: integer
        createdAt:
          description: Environment creation date ISO8601 formatted
          type: string
        websiteId:
          description: Environment's website ID
          type: int
        engineId:
          description: Environment's engine ID
          type: int
        endpointId:
          description: Environment's endpoint ID
          type: int
        stackId:
          description: Environment's stack ID
          type: int
        websiteUrl:
          description: Environment's website URL
          type: string
        status:
          description: Environment status
          type: string
          enum:
            - running
            - stopped
      required:
        - id
        - createdAt
        - websiteId
        - engineId
        - endpointId
        - stackId
        - websiteUrl
        - status
      example:
        id: 1
        createdAt: 2022-01-01T12:00:00.000000Z
        websiteId: 1
        engineId: 1
        endpointId: 1
        stackId: 123
        websiteUrl: https://my-website.arkod-wp.localhost
        status: running
    Error:
      type: object
      properties:
        message:
          description: Error message
          type: string
        type:
          description: Error type
          type: string
        origin:
          description: Original exception
          $ref: "#/components/schemas/Error"
  responses:
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Unauthorized:
      description: Unauthorized operation, authentication is required
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
